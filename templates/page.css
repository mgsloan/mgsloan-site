/* Copyright 2015 Ruud van Asseldonk
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3. See
 * the licence file in the root of the repository.
 */

*
{
  margin: 0;
  padding: 0;
}

code, em, strong
{
  line-height: 1;
}

html
{
  font-size: 16px;
}

body
{
  background-color: #fffef8;
  /* border-top: 0.5em solid #c35; */
  padding-top: 0.2em;
  color: rgba(0,0,0,0.85);
  font-family: {{body-font}}, sans-serif;
  font-feature-settings: 'liga', 'kern';
  line-height: 1.6;
}

#content, #teaser, #footer
{
  padding: 1.4em;
  margin-left: auto;
  margin-right: auto;

  {{if !light}}
  /* With a width of 36em, there are 86 characters per line on average. */
  max-width: 36em;
  {{end}}

  /* For lightweight pages with little content, reduce the maximum width so
   * there are more lines. */
  {{if light}}
  max-width: 20.4em;
  {{end}}
}

#content
{
  padding-top: 0;
  /* If the content is less than one full page, make it at least a pagefull. This
   * makes the footer always be at the bottom even for short pages, and it looks
   * better flush with the bottom of the page. This also means the reader always
   * needs to scroll to see the footer (not sure if that's good or bad).
   */
  min-height: -moz-available;
  min-height: -webkit-fill-available;
  min-height: fill-available;
}

header
{
  font-family: {{header-font}}, sans;
  margin-left: 1em;
  margin-right: 1em;
  overflow: visible;
  text-align: center;
  /* NOTE: this used to be only for min-width: 802px */
  margin-bottom: 1.0em;
}

h1
{
  /* Align the header on the third baseline. (The first baseline is at the
   * bottom of the top border of the body.) Ensure that the bottom margin
   * aligns with the grid. */
  font-family: {{header-font}}, serif;
  color: #000;
  font-size: 2.8em;
  line-height: 3.8rem;
  margin-bottom: 0.7rem;
  padding-top: 2.8rem;
}

header > h2
{
  font-feature-settings: 'dlig';
  font-size: 1.4em;
  font-style: italic;
  font-weight: normal;
  line-height: 1.4rem;
  margin-bottom: 1.0rem;
  padding-top: 0.4rem;
}

header > p
{
  padding-top: 0.5em;
  padding-bottom: 0.9em;
  margin-bottom: 0;
}

header > hr.hairline
{
  margin-top: 0.5em;
}

hr.hairline
{
  border: none;
  border-bottom: 1px solid #c35;
  transform: scale(1.4, 0.5);
}

/* The headings may contain manually inserted line breaks for a more balanced
 * break, but these are intended for full-width pages only. Ignore them for
 * narrow viewports. */
h1 > br
{
  display: none;
}

p, nav
{
  margin-bottom: 1em;
  padding-top: 0.4em;
}

a
{
  color: #c35;
  text-decoration: none;
}

{{if archive}}
/* Used for post titles on the archive page. */
h3
{
  /* Align as p, but remove the blank line afterwards. */
  font-size: 1em;
  margin-bottom: -0.4em;
  padding-top: 0.4em;
}

h3 > a
{
  color: inherit;
}
{{end}} /* if archive */

abbr, .smcp
{
  font-family: "Alegreya Sans SC";
  letter-spacing: 0.1em;
}

abbr
{
  /* The generous letter spacing for small caps is great as a stylistic feature,
   * but it is too much in the body text. */
  letter-spacing: 0.03em;

  /* Compensate for the extra space at the end. */
  margin-right: -0.03em;
}

.run-in
{
  font-family: "Alegreya Sans SC";
  /* Use a bit more modest letter spacing here than for .smcp. */
  letter-spacing: 0.05em;
}

h2
{
  font-family: {{serif-font}}, serif;
  font-size: 1.4em;
  line-height: 1em;
  margin-bottom: 0.2rem;
  padding-top: 1.2rem;
}

{{if !light}}
{{if !archive}}
h2 > a:before
{
  content: '¶';
  width: 1.2rem;
  margin-left: -1.2rem;
  display: inline-block;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  color: #b4aaaa;
}

/* Show a subtle pilcrow on hover. */
h2:hover > a:before
{
  opacity: 1;
}

/* Show the pilcrow in accent color when linked to directly. */
h2:target > a:before
{
  opacity: 1;
  color: #c36;
}

{{end}}
{{end}}

{{if archive}}
.archive h2
{
  /* On the archive page, h2 is used for the year headers. */
  color: #ccc;
  font-size: 2.8em;
  letter-spacing: 1rem;

  /* Unlike other h2, align this bigger one to the baseline. */
  margin-bottom: 0.6rem;
  padding-top: 0.8rem;
}
{{end}} /* if archive */

ul, ol
{
  counter-reset: ol;
  list-style: none;
  margin-bottom: 1em;
  padding-top: 0.4em;
}

li
{
  margin-left: 1em;
  margin-bottom: 1em;
  /* Top padding is handled by p within the li */
  /* padding-top: 0.4em */
}

li:before
{
  display: inline-block;
  margin-left: -1em;
  width: 1em;
}

ul > li:before
{
  content: '•';
  font-weight: bold;
  transform: scale(2);
  position: relative;
  top: -0.15em;
}

ol > li:before
{
  content: counter(ol, decimal);
  counter-increment: ol;
  font-weight: bold;
}

li > p:first-child
{
  display: inline;
}

table
{
  border-spacing: 0;
  margin-bottom: 1em;
  margin-left: auto;
  margin-right: auto;
  text-align: left;
}

th
{
  padding-top: 0.4em;
}

th, td
{
  padding-right: 1.4em;
  vertical-align: top;
}

code
{
  color: #c35;
  font-family: {{mono-font}}, Inconsolata, Consolas, monospace;
}

div.sourceCode
{
  /* Hang the border left of the pre in the margin. */
  /* TODO: How do I handle this when there is no div? */
  margin-left: -0.25em;
  overflow: hidden;
}

pre
{
  /* The top and bottom of the block are not baseline-aligned, but the space
   * between the top and the text baseline and between the bottom and the
   * x-height is both 1.6em. The code baseline is offset from the regular
   * baseline by 0.7em (half a line height). */
  background-color: #f8f7f4;
  border-left: 0.25rem solid #c35;
  margin-bottom: 0.6rem;
  margin-top: 0.2rem;
  overflow-x: auto;
  padding: 1rem;
  padding-left: 1.4rem;
  padding-right: 1.4rem;

  /* Use a slightly smaller font size for code blocks, because matching the
   * x-height to the body font makes the code look too big. Do keep the same
   * line height to ensure proper baseline alignment. */
  font-size: 0.9em;
  line-height: 1.4rem;
}

code.sourceCode
{
  color: #456;
}

/* Syntax highlighting colors, adapted from the default prism.js theme. */
.kw, .cf           { color: #07a; } /* Keyword, control flow */
.dt, .at           { color: #d56; } /* Data type, function, attribute */
.fu                { color: #690; } /* Function */
.dv, .bn, .fl, .er { color: #905; } /* Decimal, base N, float, decimal part */
.ch, .st           { color: #d80; } /* Character, string */
.co                { color: #789; } /* Comment */

img
{
  width: 100%;
  height: auto;

  /* To align images the same as code blocks, they need to be 0.2em below the
   * baseline. The paragraph has a padding of 0.4em, so compensate the 0.2.
   * This leaves 1.6em between the baseline and the image. For optical
   * alignment, the same space should be left between the bottom and the
   * x-height of the next line. Paragraphs are aligned such that there is 1em
   * between the baseline and the x-height of the next line. The paragraph that
   * surrounds the image provides 1em bottom margin, so 0.4em needs to be
   * compensated, plus 0.2em for the top offset. */
  margin-top: -0.2em;
  margin-bottom: -0.6em;
}

blockquote
{
  font-family: {{serif-font}}, serif;
  font-style: italic;
  padding-left: 1em;
  padding-right: 1em;
}

/* Light pages do not have a teaser or footer, no need to include the css. */
{{if !light}}

#teaser-section
{
  background-color: #c35;
  color: #f5b2c8;
}

#teaser p:first-child {
  margin-bottom: 0.3em;
}

#teaser a {
  color: #fff; /* TODO: Pick good colour scheme. */
  font-family: {{serif-font}}, serif;

  /* Fix baseline alignment of the teaser in Firefox. At different viewport
   * widths and zoom levels, the error is different, and there is no one
   * value that corrects the error at all sizes. The value below works for
   * large sizes. */
  line-height: 0;
}

#teaser a:after
{
  /* U+00a0 is a non-breaking space. */
  color: #fff;
  content: '\a0»';
}

#teaser > h2
{
  margin-bottom: 0.2rem;
  padding-top: 0.5rem; /* Same vertical alignment as #content h2. */
}

footer
{
  background-color: #234; /* TODO: pick unified colour scheme. */
  color: #b4aaaa;
}

#notices
{
  clear: both;
  text-align: center;
  padding-top: 1.8em;
}

footer span
{
  margin-left: 0.25em;
  margin-right: 0.25em;
}

{{end}} /* !light */

{{if light}}
nav
{
  text-align: center;
}

nav a
{
  margin-left: 1em;
  margin-right: 1em;
}
{{end}} /* if light */

{{if archive}}
.archive p > a
{
  font-family: {{serif-font}}, serif;

  /* The next line is required to fix baseline alingnment in Firefox. */
  line-height: 0;
}

.archive p > a:after
{
  /* U+00a0 is a non-breaking space. */
  content: '\a0»';
}
{{end}} /* if archive */

/* Scale font size as the square root of the viewport width. 16px should be the
 * minimum font size, for a viewport width of 400px. At 1600px, the content
 * should fill half of the viewport. That means 36em is 800px, so the font size
 * should be 22px.
 *
 * This leads to the following relations:
 *
 *     font-size = 10 + 12 * sqrt(width / 1600),
 *     width     = (font-size - 10)^2 * (1600 / 144)
 *
 * Note that the min-width given below is actually the viewport width for its
 * font size minus 0.5px, so the font size is right on average. */

@media(min-width: 470px)
{
  html { font-size: 17px; }

  /* Add some margin to the heading to make it line-wrap nicer. Smaller
   * viewports get more room because the words might not fit otherwise. */
  header
  {
    margin-left: 2.8em;
    margin-right: 2.8em;
  }
}

@media(min-width: 625px)
{
  html { font-size: 18px; }

 /* Full-width headings have been line-wrapped manually for a more balanced
  * result than what the browser would do. Even though at this size the line
  * width is not yet 36em, titles that need breaking are typically much
  * shorter per line, so this should fit. */
  h1 > br
  {
    display: block;
  }

  {{if !light}}
  {{if !archive}}
  h2 > a:before
  {
    width: 1.6rem;
    margin-left: -1.6rem;
  }
  {{end}}
  {{end}}
}

/* At this width, the viewport is wide enough to fit the content at its
 * maximum width (36em). */
@media(min-width: 802px)
{
  html { font-size: 19px; }

  /* If we are on a large-ish screen anyway, give the header some room to
   * breathe. */
  header
  {
    margin-top: 1.4em;
  }
}

@media(min-width: 1003px)
{
  html { font-size: 20px; }
}

@media(min-width: 1225px)
{
  html { font-size: 21px; }

  /* At this width it becomes feasible to hang the year headers in the margin. */
  {{if archive}}
  .archive h2
  {
    text-align: right;
    letter-spacing: 0.5rem;
    width: 8rem;
    height: 0;

    /* I want 2em distance to the text. 0.5em comes from the letter spacing
     * already, 8em to compensate the width, so 9.5em in total. */
    margin-left: -9.5rem;
    margin-bottom: -0.8rem;
  }
  {{end}} /* if archive */

  /* Move the footer navigation into the margin too, left of the "About me"
   * paragraph. */
  #footer
  {
    /* Add 6em, the width of the navigation. */
    max-width: 42em;
  }

  footer h2
  {
    /* Compensate the widening offset. */
    margin-left: 3rem;
  }

  footer nav
  {
    float: left;
    text-align: right;
    width: 6em;

    /* The footer gets 3em wider on the left, so add another 3em to move the
     * nav fully into the margin, then separate from the text by 2em more. */
    margin-left: -5em;
  }

  #about
  {
    float: right;
    width: 36em;
    margin-right: 3em;
  }
}

@media(min-width: 1496px) { html { font-size: 22px; } }
@media(min-width: 1736px) { html { font-size: 23px; } }
@media(min-width: 2025px) { html { font-size: 24px; } }

/* At the points where the font size changes, the viewport width in ems makes
 * a jump:
 *
 *   469px -> 470px: 29.3em -> 27.6em (delta -1.7em)
 *   624px -> 625px: 36.7em -> 34.7em (delta -2.0em)
 *   801px -> 802px: 44.5em -> 42.2em (delta -2.3em)
 *
 * Instead of having a minimal margin until the viewport is wide enough, I like
 * to gradually increase the margin. Changing the margins at the same time as
 * the font size would make the difference in line width even more extreme, so
 * instead change the margins in between. (The in-between points can be computed
 * using the width formula above, but now at integer font sizes.)
 *
 * The settings below split the first jump in 1.2em and 0.5em, and the second
 * jump in 1.6em and 0.4em. */

/* Ideal width for 16px font size. */
@media(min-width: 400px)
{
  #content, #teaser, #footer
  {
    padding-left: 2em;
    padding-right: 2em;
  }
}

/* Ideal width for 18px font size. */
@media(min-width: 544px)
{
  #content, #teaser, #footer
  {
    padding-left: 2.8em;
    padding-right: 2.8em;
  }

  /* Hang list numbers and bullets in the margin when there is enough space. */
  li
  {
    margin-left: 0;
  }
}

@media(max-width: 490px)
{
  /* On narrow screens, remove the dot in the footer and make it behave like
   * a line break instead. */
  #breakdot
  {
    display: block;
    height: 0;
    overflow: hidden;
    width: 0;
  }
}

/* TODO: Test this on larger screens. */
